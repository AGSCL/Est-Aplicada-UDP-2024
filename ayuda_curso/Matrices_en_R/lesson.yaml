- Class: "text"
  Output: "¡Bienvenido a la lección sobre matrices en R! Vamos a aprender cómo crear y manipular matrices. Empecemos con lo básico."

- Class: "cmd_question"
  Output: "Crea una matriz de 3 filas y 3 columnas que contenga los números del 1 al 9."
  CorrectAnswer: "matrix(1:9, nrow=3, ncol=3)"
  AnswerTests: 
    - testCondition: "is.matrix(.user_expr)"
      errorMessage: "Tu respuesta no es una matriz. Recuerda usar la función matrix() para crear una matriz."
    - testCondition: "dim(.user_expr)[1] == 3 && dim(.user_expr)[2] == 3"
      errorMessage: "Tu matriz no tiene las dimensiones correctas. Asegúrate de que tenga 3 filas y 3 columnas."
  Hint: "Usa la función matrix() con los argumentos nrow=3 y ncol=3 para crear una matriz de 3x3."

- Class: "text"
  Output: "¡Perfecto! Ahora que has creado tu primera matriz, vamos a realizar algunas operaciones con ella."

- Class: "cmd_question"
  Output: "Suma 2 a cada elemento de la matriz. Usa la operación A + 2."
  CorrectAnswer: "A <- matrix(1:9, nrow=3, ncol=3)\nA + 2"
  AnswerTests:
    - testCondition: "exists('A')"
      errorMessage: "No has creado la matriz A. Recuerda crearla usando matrix(1:9, nrow=3, ncol=3)."
    - testCondition: "is.matrix(A)"
      errorMessage: "A no es una matriz. Asegúrate de crearla correctamente."
    - testCondition: "all(dim(A) == c(3, 3))"
      errorMessage: "La matriz A no tiene las dimensiones correctas. Asegúrate de que A sea de 3 filas y 3 columnas."
    - testCondition: "all(.user_expr == A + 2)"
      errorMessage: "La operación de suma no es correcta. Asegúrate de usar A + 2."
  Hint: "Recuerda que puedes realizar la operación A + 2 directamente sobre la matriz."

- Class: "text"
  Output: "¡Bien hecho! Ahora intentemos multiplicar dos matrices."

- Class: "cmd_question"
  Output: "Crea una nueva matriz B con los números del 9 al 1 y multiplícala por A usando el operador %*%."
  CorrectAnswer: "B <- matrix(9:1, nrow=3, ncol=3)\nA %*% B"
  AnswerTests:
    - testCondition: "exists('A')"
      errorMessage: "La matriz A no ha sido creada. Asegúrate de que creaste la matriz A correctamente antes de continuar."
    - testCondition: "is.matrix(A)"
      errorMessage: "A no es una matriz. Asegúrate de que A sea una matriz creada correctamente con matrix()."
    - testCondition: "all(dim(A) == c(3, 3))"
      errorMessage: "La matriz A no tiene las dimensiones correctas. Asegúrate de que tenga 3 filas y 3 columnas."
    - testCondition: "exists('B')"
      errorMessage: "No has creado la matriz B. Recuerda que debes crearla usando matrix(9:1, nrow=3, ncol=3)."
    - testCondition: "is.matrix(B)"
      errorMessage: "B no es una matriz. Asegúrate de usar la función matrix() para crear B correctamente."
    - testCondition: "all(dim(B) == c(3, 3))"
      errorMessage: "La matriz B no tiene las dimensiones correctas. Asegúrate de que B sea de 3 filas y 3 columnas."
    - testCondition: "all(.user_expr == A %*% B)"
      errorMessage: "La multiplicación de matrices no es correcta. Asegúrate de usar el operador %*% para multiplicar A por B."
  Hint: "Recuerda que B se crea con matrix(9:1, nrow=3, ncol=3) y la multiplicación de matrices en R se hace con %*%."

- Class: "cmd_question"
  Output: "Crea una matriz identidad de 3x3 usando la función diag()."
  CorrectAnswer: "diag(3)"
  AnswerTests:
    - testCondition: "is.matrix(.user_expr)"
      errorMessage: "Tu respuesta no es una matriz. Asegúrate de usar la función diag() para crear una matriz."
    - testCondition: "all(.user_expr == diag(3))"
      errorMessage: "La matriz no es una matriz identidad 3x3. Asegúrate de que estás creando una matriz con la función diag(3)."
  Hint: "Usa diag(n) para crear una matriz identidad de n filas y columnas."

- Class: "cmd_question"
  Output: "Extrae la segunda columna de la matriz A y guárdala en un vector llamado columna_2."
  CorrectAnswer: "columna_2 <- A[, 2]"
  AnswerTests:
    - testCondition: "exists('A')"
      errorMessage: "La matriz A no ha sido creada. Asegúrate de que creaste la matriz A antes de continuar."
    - testCondition: "exists('columna_2')"
      errorMessage: "El objeto columna_2 no ha sido creado. Asegúrate de extraer la columna de A correctamente."
    - testCondition: "is.vector(columna_2)"
      errorMessage: "Tu resultado no es un vector. Asegúrate de extraer una sola columna de la matriz."
    - testCondition: "length(columna_2) == nrow(A)"
      errorMessage: "El vector extraído no tiene la longitud correcta. Asegúrate de que estás extrayendo la segunda columna de A."
  Hint: "Recuerda que puedes extraer una columna de una matriz usando la sintaxis A[, columna]."

- Class: "cmd_question"
  Output: "Transpone la matriz A y guarda el resultado en la matriz transpuesta_A."
  CorrectAnswer: "transpuesta_A <- t(A)"
  AnswerTests:
    - testCondition: "exists('A')"
      errorMessage: "La matriz A no ha sido creada. Crea la matriz antes de intentar transponerla."
    - testCondition: "exists('transpuesta_A')"
      errorMessage: "No has creado la matriz transpuesta_A. Asegúrate de guardar el resultado en el objeto transpuesta_A."
    - testCondition: "all(dim(transpuesta_A) == rev(dim(A)))"
      errorMessage: "La matriz transpuesta no tiene las dimensiones correctas. Asegúrate de que usaste la función t() para transponer."
  Hint: "Para transponer una matriz en R, usa la función t()."

- Class: "cmd_question"
  Output: "Calcula la inversa de la matriz cuadrada A y guárdala en el objeto inversa_A."
  CorrectAnswer: "inversa_A <- solve(A)"
  AnswerTests:
    - testCondition: "exists('A')"
      errorMessage: "La matriz A no ha sido creada. Asegúrate de que creaste A antes de continuar."
    - testCondition: "exists('inversa_A')"
      errorMessage: "El objeto inversa_A no ha sido creado. Asegúrate de que estás calculando la inversa y guardándola correctamente."
    - testCondition: "all.equal(inversa_A %*% A, diag(nrow(A)))"
      errorMessage: "El cálculo de la inversa no es correcto. Asegúrate de que usaste la función solve() para calcular la inversa."
  Hint: "Usa la función solve() para calcular la inversa de una matriz en R."

- Class: "cmd_question"
  Output: "Suma las matrices A y B, y guarda el resultado en C."
  CorrectAnswer: "C <- A + B"
  AnswerTests:
    - testCondition: "exists('A') && exists('B')"
      errorMessage: "Asegúrate de que ambas matrices, A y B, están creadas antes de sumarlas."
    - testCondition: "is.matrix(A) && is.matrix(B)"
      errorMessage: "Ambos objetos A y B deben ser matrices. Asegúrate de que A y B sean matrices."
    - testCondition: "all(dim(A) == dim(B))"
      errorMessage: "Las matrices A y B no tienen las mismas dimensiones. Asegúrate de que sean matrices compatibles para la suma."
    - testCondition: "exists('C') && is.matrix(C)"
      errorMessage: "No has creado la matriz C correctamente. Asegúrate de que el resultado se está guardando en C."
    - testCondition: "all(C == A + B)"
      errorMessage: "La suma de las matrices no es correcta. Asegúrate de que estás sumando A y B correctamente."
  Hint: "Usa el operador + para sumar dos matrices con las mismas dimensiones."

- Class: "cmd_question"
  Output: "Multiplica la matriz A por el vector v y guarda el resultado en el objeto resultado."
  CorrectAnswer: "resultado <- A %*% v"
  AnswerTests:
    - testCondition: "exists('A') && exists('v')"
      errorMessage: "Ambos objetos, la matriz A y el vector v, deben estar creados."
    - testCondition: "is.matrix(A) && is.vector(v)"
      errorMessage: "A debe ser una matriz y v debe ser un vector. Asegúrate de que ambos objetos son del tipo correcto."
    - testCondition: "ncol(A) == length(v)"
      errorMessage: "El número de columnas de A no coincide con la longitud del vector v. Asegúrate de que ambos son compatibles para la multiplicación."
    - testCondition: "exists('resultado') && is.vector(resultado)"
      errorMessage: "No has guardado el resultado correctamente. Asegúrate de que la multiplicación se guarda en el objeto resultado."
    - testCondition: "all(resultado == A %*% v)"
      errorMessage: "El resultado de la multiplicación no es correcto. Asegúrate de usar el operador %*%."
  Hint: "Recuerda que para multiplicar una matriz por un vector, ambos deben ser compatibles en dimensiones."

- Class: "text"
  Output: "¡Felicidades! Has aprendido lo básico sobre la creación y manipulación de matrices en R."
